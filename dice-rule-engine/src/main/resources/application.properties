server.servlet.contextPath=/dice
server.port = 9093


spring.data.cassandra.keyspace-name=dice
# spring.data.cassandra.contact-points=cassandradb.ploan-cv-uat
spring.data.cassandra.contact-points=localhost
spring.data.cassandra.port=9042
spring.data.cassandra.schema-action=CREATE_IF_NOT_EXISTS
spring.data.cassandra.local-datacenter=datacenter1
spring.data.cassandra.entity-base-package=com.alliance
spring.data.cassandra.username = cassandra
spring.data.cassandra.password = cassandra

# AOP DB
# spring.datasource.url=jdbc:db2://172.16.102.22:50012/aopdb
# spring.datasource.username=ibsadmin
# spring.datasource.password=pass1234
spring.datasource.url=jdbc:db2://localhost:25000/DBOBDB
spring.datasource.jdbc-url=jdbc:db2://localhost:25000/DBOBDB
# spring.datasource.username=db2admin
# spring.datasource.password=admin
spring.datasource.username=db2inst1
spring.datasource.password=db2admin
spring.datasource.driver-class-name=com.ibm.db2.jcc.DB2Driver

# spring.second-datasource.url=jdbc:db2://localhost:25000/sample
# spring.second-datasource.jdbc-url=jdbc:db2://localhost:25000/sample
# spring.second-datasource.username=db2admin
# spring.second-datasource.password=admin

# spring.second-datasource.url=jdbc:db2://localhost:25000/TESTDB
# spring.second-datasource.jdbc-url=jdbc:db2://localhost:25000/TESTDB
# spring.second-datasource.username=db2inst1
# spring.second-datasource.password=db2admin
# spring.second-datasource.driver-class-name=com.ibm.db2.jcc.DB2Driver

test.process.recommendation.endpointUrl = http://localhost:9090/dice/testProcessRecommendation?cifNo=
get.campaign.endpointUrl = http://localhost:9090/dice/campaigns/
get.campaign.by.name.endpointUrl = http://localhost:9090/dice/getCampaignByName
get.campaign.by.properties.and.status.endpointUrl = http://localhost:9090/dice/getCampaignByPropertiesAndCampaignStatus
create.recommendation.endpointUrl = http://localhost:9091/dice/createRecommendation
delete.existing.recommendation.endpointUrl = http://localhost:9091/dice/deleteRecommendation

# AOP DB
# spring.datasource.db2instance1.url=jdbc:db2://172.16.102.22:50012/aopdb
# spring.datasource.db2instance1.username=ibsadmin
# spring.datasource.db2instance1.password=pass1234
# spring.datasource.db2instance1.driver-class-name=com.ibm.db2.jcc.DB2Driver

# PL DB
spring.second-datasource.url=jdbc:db2://198.128.102.64:60000/pldb
spring.second-datasource.jdbc-url=jdbc:db2://198.128.102.64:60000/pldb
spring.second-datasource.username=db2inst
spring.second-datasource.password=db2inst
spring.second-datasource.driver-class-name=com.ibm.db2.jcc.DB2Driver


# AOP DB
# spring.datasource.db2instance1.url=jdbc:db2://localhost:25000/DBOBDB
# spring.datasource.db2instance1.username=db2admin
# spring.datasource.db2instance1.password=admin
# spring.datasource.db2instance1.driver-class-name=com.ibm.db2.jcc.DB2Driver

# PL DB
# spring.datasource.db2instance2.url=jdbc:db2://localhost:25000/sample
# spring.datasource.db2instance2.username=db2admin
# spring.datasource.db2instance2.password=admin
# spring.datasource.db2instance2.driver-class-name=com.ibm.db2.jcc.DB2Driver



# Kafka configuration properties for SCRAM-SHA-512 authentication and TLS transport.
# spring.kafka.producer.bootstrap-servers=my-cluster-kafka-bootstrap-kafka-uat.apps.uatdbos4.corp.alliancebg.com.my:443
# spring.kafka.producer.properties.ssl.truststore.location=src/main/resources/truststore/caKafka.p12
# spring.kafka.producer.properties.ssl.truststore.password=p9bEwGHLkedy
# spring.kafka.producer.properties.ssl.truststore.type=PKCS12
# spring.kafka.producer.properties.security.protocol=SASL_SSL
# spring.kafka.producer.properties.sasl.mechanism=SCRAM-SHA-512
# spring.kafka.producer.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="my-user" password="AU4TMiOHfgLZwmv1WmiRprwXMr1HbE6G";
# spring.kafka.consumer.bootstrap-servers=my-cluster-kafka-bootstrap-kafka-uat.apps.uatdbos4.corp.alliancebg.com.my:443

# spring.kafka.consumer.properties.ssl.truststore.location=src/main/resources/truststore/caKafka.p12
# spring.kafka.consumer.properties.ssl.truststore.password=p9bEwGHLkedy
# spring.kafka.consumer.properties.ssl.truststore.type=PKCS12
# spring.kafka.consumer.properties.security.protocol=SASL_SSL
# spring.kafka.consumer.properties.sasl.mechanism=SCRAM-SHA-512
# spring.kafka.consumer.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="my-user" password="AU4TMiOHfgLZwmv1WmiRprwXMr1HbE6G";

logging.file.name = tmp/log/dice.log
logging.level.com.dre = info
logging.file.max-size = 10MB
logging.file.total-size-cap = 10MB
logging.pattern.rolling-file-name = tmp/log/dice-%d{yyyy-MM-dd-HH}.%i.log

solecc.dbview.table = DDM_SOLE_CC_VIEW

check.customer.profile.endpointUrl = https://172.16.40.111/personalapi/registration/existingUserRegistration/dice/profile/
get.customer.profile.via.cache.endpointUrl = http://localhost:9096/dice/api/cache/getProfileById


saveplus.referral.campaign.name = UAT Campaign for eKYC SavePlus referral programme
solocc.campaign.name = UAT Campaign for Solo CC First Time Login Customer to sign-up for eKYC PLoan
ploan.campaign.name = UAT Campaign for eKYC PLoan Cross-Sell SavePlus